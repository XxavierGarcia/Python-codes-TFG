import numpy as np
import matplotlib.pyplot as plt

plt.rc('text', usetex=True)
plt.rc('font', family='serif', size=12)


# Cargar los datos desde los archivos
data1 = np.loadtxt('data1.txt', skiprows=51, usecols=(-7, -6, -3, -2, -1))  # Primer conjunto de datos
data2 = np.loadtxt('data.txt', skiprows=103, usecols=(-9, -8, -4, -2, -1))  # Segundo conjunto de datos

# Extracci칩n de variables del primer conjunto de datos
period1, errperiod1, eta1, dampingtime1, errdtime1 = data1.T

# Extracci칩n de variables del segundo conjunto de datos
period2, errperiod2, eta2, dampingtime2, errdtime2 = data2.T

#Concatenaci칩n de los datos de ambos conjuntos
period = np.concatenate((period1, period2)) * 60
errperiod = np.concatenate((errperiod1, errperiod2)) * 60
dampingtime = np.concatenate((dampingtime1, dampingtime2)) * 60
errdtime = np.concatenate((errdtime1, errdtime2)) * 60
eta = np.concatenate((eta1, eta2))


period1 = period1 * 60
errperiod1 = errperiod1 * 60
dampingtime1 = dampingtime1 * 60
errdtime1 = errdtime1 * 60

period2 = period2 * 60
errperiod2 = errperiod2 * 60
dampingtime2 = dampingtime2 * 60
errdtime2 = errdtime2 * 60


plt.figure(figsize=(8, 6)) 

# Para a침dir barras de error

# plt.errorbar(period1, dampingtime1, xerr=errperiod1, yerr=errdtime1, fmt='o', 
#               color='limegreen', ecolor='black', capsize=3, capthick=2, elinewidth=1, 
#               markeredgewidth=0.7, markerfacecolor='lawngreen',marker='X', markeredgecolor='black',label="Goddard et al. (2016)")

# plt.errorbar(period2, dampingtime2, xerr=errperiod2, yerr=errdtime2, fmt='o', 
#               color='limegreen', ecolor='black', capsize=3, capthick=2, elinewidth=1, 
#               markeredgewidth=1, markerfacecolor='limegreen', markeredgecolor='black',label="Nechaeva et al. (2019)")

plt.scatter(period2, dampingtime2, edgecolors='black', facecolors='lawngreen',label="Goddard et al. (2016)")
plt.scatter(period1, dampingtime1, edgecolors='black', facecolors='lime',marker='X',label="Nechaeva et al. (2019)")

plt.xlabel('$P$ (s)', fontsize=17)
plt.ylabel(r'$\tau_d$ (s)', fontsize=19)
plt.ylim([0,3100])
plt.xlim([45,1300])
plt.legend(loc="best",fontsize=14)
plt.show()

